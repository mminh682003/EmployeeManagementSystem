<SfDialog Width="280px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
    <DialogEvents OnOpen="OpenDialogs"></DialogEvents>
    <DialogTemplates> 
        <Header>@Title phòng bộ phận</Header>
        <Content> 
            <EditForm Model="Department" Enhance OnSubmit="Save">
                <div class="card border-success">
                    <div class="card-body"> 
                        <div class="form-group">
                            <label class="form-label">Id</label>
                            <input @bind="Department.Id" class="form-control" disabled></input>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Name</label>
                            <InputText @bind-Value="Department.Name" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3 mb-3" >
                            <label class="form-label">Tìm kiếm phòng ban tổng hợp</label>
                            @if(Department.GeneralDepartment != null){
                                string selected = Department.GeneralDepartment.Name!;
                                <SfDropDownList TValue="string" TItem="GeneralDepartment" Placeholder="@selected" DataSource="GeneralDepartments"> 
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="GeneralDepartment" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                            else{
                                <SfDropDownList TValue="string" TItem="GeneralDepartment" Placeholder="Phòng ban tổng hợp" DataSource="GeneralDepartments">
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="GeneralDepartment" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                        </div>
                    </div>
                    </div>
            </EditForm>
        </Content>
    </DialogTemplates>

    <DialogButtons>
        <DialogButton Content="Lưu" Type="ButtonType.Submit" IsPrimary="true" OnClick="Save"></DialogButton>
    </DialogButtons>
</SfDialog>




@code {
    [Parameter] public Department Department { get; set; } = new();
    [Parameter] public List<GeneralDepartment> GeneralDepartments { get; set; } = new();
    [Parameter] public EventCallback<Department> HandleSaveOperationEvent { get; set; }

    private bool IsVisible { get; set; } = false;
    public string Title { get; set; } = "Add";

    private async void Save()
    {
        try
        {
            if (string.IsNullOrEmpty(Department.Name) || Department.GeneralDepartment == null)
            {
                await dialogService.AlertAsync("Bạn cần nhập tên phòng bộ phận và chọn phòng tổng hợp!", "Thông báo!");
                return;
            }
            Console.WriteLine($"Debug: Department ID = {Department.Id}, Name = {Department.Name}, GeneralDepartmentId = {Department.GeneralDepartmentId}");
            await HandleSaveOperationEvent.InvokeAsync(Department);
        }
        catch (Exception ex)
        {
            await dialogService.AlertAsync($"Đã xảy ra lỗi: {ex.Message}", "Lỗi!");
        }
    }



    // Mở dialog
    public void OpenDialogs()
    {
        IsVisible = true;
        StateHasChanged();
    }
    public void ChangeTitle(string title)
    {
        Title = title;
    }

    public void OnValueChange(ChangeEventArgs<string, GeneralDepartment> args)
    {
        if (int.TryParse(args.Value, out int generalDepartmentId))
        {
            Department.GeneralDepartmentId = generalDepartmentId;
            Department.GeneralDepartment = GeneralDepartments.FirstOrDefault(g => g.Id == generalDepartmentId);
        }
    }

    public void CloseDialogs()
    {
        // Đặt trạng thái dialog thành đóng
        IsVisible = false;
        StateHasChanged();
    }
}
